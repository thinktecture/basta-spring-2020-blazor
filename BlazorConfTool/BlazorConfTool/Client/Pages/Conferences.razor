@page "/conferences"

@attribute [Authorize]

@using Microsoft.AspNetCore.SignalR.Client
@using DTO = BlazorConfTool.Shared.DTO

@inject HttpClient _http
@inject NavigationManager _navigation

<h1>Conferences</h1>

<button @onclick="AddConference">Add Conference</button>
<br />
<br />

@if (_conferences == null)
{
    <p><em>Fetching conferences...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var conf in _conferences)
            {
                <tr @onclick="() => LoadDetails(conf.ID)">
                    <td>@conf.Title</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<DTO.ConferenceOverview> _conferences;
    private HubConnection _hubConnection;

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(_navigation.ToAbsoluteUri("/conferencesHub"))
            .Build();

        _hubConnection.On("NewConferenceAdded", async () =>
        {
            Console.WriteLine("###SignalR - NEW conference added!");
            _conferences = await ListConferences();

            StateHasChanged();
        });

        await _hubConnection.StartAsync();

        _conferences = await ListConferences();
    }

    private async Task<DTO.ConferenceOverview[]> ListConferences()
    {
        return await _http.GetJsonAsync<DTO.ConferenceOverview[]>(
            "api/conferences");
    }

    private void LoadDetails(Guid id)
    {
        _navigation.NavigateTo("conferences/show/" + id);
    }

    private void AddConference(MouseEventArgs e)
    {
        _navigation.NavigateTo("conferences/new");
    }
}
