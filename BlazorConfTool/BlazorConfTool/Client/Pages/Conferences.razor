@page "/conferences"

@attribute [Authorize]

@using Microsoft.AspNetCore.SignalR.Client
@using DTO = BlazorConfTool.Shared.DTO
@using BlazorConfTool.Client.Services

@inject NavigationManager _navigation
@inject ConferencesService _conferencesService

<h1>Conferences</h1>

<button @onclick="AddConference">Add Conference</button>
<br />
<br />

<SpinLoader IsLoading="@(_conferences == null)">
    <ContentTemplate>
        <table class="table">
            <thead>
                <tr>
                    <th>Title</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var conf in _conferences)
                {
                    <tr @onclick="() => LoadDetails(conf.ID)">
                        <td>@conf.Title</td>
                    </tr>
                }
            </tbody>
        </table>
    </ContentTemplate>
</SpinLoader>

@code {
    private IEnumerable<DTO.ConferenceOverview> _conferences;
    private HubConnection _hubConnection;

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(_navigation.ToAbsoluteUri("/conferencesHub"))
            .Build();

        _hubConnection.On("NewConferenceAdded", async () =>
        {
            Console.WriteLine("###SignalR - NEW conference added!");
            _conferences = await ListConferences();

            StateHasChanged();
        });

        await _hubConnection.StartAsync();

        _conferences = await ListConferences();
    }

    private async Task<List<DTO.ConferenceOverview>> ListConferences()
    {
        return await _conferencesService.ListConferences();
    }

    private void LoadDetails(Guid id)
    {
        _navigation.NavigateTo("conferences/show/" + id);
    }

    private void AddConference(MouseEventArgs e)
    {
        _navigation.NavigateTo("conferences/new");
    }
}
